define pred = fun (m : Nat) -> Ind (fun (n : Nat) -> Nat) (Z) (fun (n : Nat) -> fun (q : Nat) -> n )  m
define add = fun (q : Nat) -> fun (m : Nat) -> Ind (fun (n : Nat) -> Nat) (q) (fun (n : Nat) -> fun (nq : Nat) -> (S nq) )  m
define p = fun (x : Nat) -> fun (y : Nat) -> fun (e : Eq x y) -> Eq (S x) (S y)
define r = fun (x : Nat) -> Refl (S x)
define Seq = fun (x : Nat) -> fun (y : Nat) -> fun (e : Eq x y) -> J p r x y e
define addz = fun (n : Nat) -> Refl n
define p1 = fun (n : Nat) -> Eq (add Z n) n
define s = fun (x : Nat) -> fun (q : (p1 x)) -> Seq (add Z x) x q
define zadd = fun (n : Nat) -> Ind p1 (Refl Z) s n
check zadd = Pi (n : Nat) -> Eq (add Z n) n